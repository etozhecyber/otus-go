version: "3"
services:
  rmq:
    image: rabbitmq:3-management
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: calserv
      POSTGRES_USER: calserv
      POSTGRES_PASSWORD: password
  migration:
    command: "./wait.sh db 5432 /go/bin/goose --env=docker up"
    build:
      context: .
      dockerfile: migration.Dockerfile
    depends_on:
      - "db"
  pg_exporter:
    image: wrouesnel/postgres_exporter
    volumes:
      - ./prometheus/queries.yml:/queries.yml
    environment:
      DATA_SOURCE_NAME: postgresql://calserv:password@db:5432/calserv?sslmode=disable
      PG_EXPORTER_EXTEND_QUERY_PATH: /queries.yml
    ports:
      - 9187:9187
    depends_on:
      - "db"
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
        - pg_exporter
    #   - api
    #   - sender
    #   - scheduler
  # grafana:
  #   image: grafana/grafana
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - prometheus
  #     - grpcserver
  #     - grpcclient

#apps
  api:
    build:
      context: .
      dockerfile: api.Dockerfile
    ports:
      - "50051:50051"
    depends_on:
      - "db"
      - "migration"
  sender:
    command: "./wait.sh rmq 5672 ./sender"
    build:
      context: .
      dockerfile: sender.Dockerfile
    depends_on:
      - "migration"
      - "rmq"
  scheduler:
    command: "./wait.sh rmq 5672 ./scheduler"
    build:
      context: .
      dockerfile: scheduler.Dockerfile
    depends_on:
      - "migration"
      - "rmq"
      - "db"
